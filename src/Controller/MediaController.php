<?php

namespace App\Controller;

use App\Entity\Media;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Validator\Validator\ValidatorInterface;

/**
 * Class DefaultController
 */
class MediaController extends Controller
{
    /**
     * @Route("/media", name="media")
     *
     * @Method("POST")
     *
     * @param Request            $request
     * @param ValidatorInterface $validator
     *
     * @return Response
     *
     * @throws FileException
     */
    public function index(Request $request, ValidatorInterface $validator)
    {
        $media = new Media();
        /** @var UploadedFile $file */
        $file = $request->files->get('file');
        $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

        $media->setFile($file);
        $media->setName($file->getClientOriginalName());

        $errors = $validator->validate($media);
        if (count($errors) > 0) {
            return new JsonResponse(Response::HTTP_BAD_REQUEST);
        }
        // moves the file to the directory where brochures are stored
        $file->move(
            $this->getParameter('media_directory'),
            $fileName
        );

        $media->setFile($fileName);
        $this->getDoctrine()->getManager()->persist($media);
        $this->getDoctrine()->getManager()->flush();

        return new JsonResponse(Response::HTTP_OK);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid('', true));
    }
}
